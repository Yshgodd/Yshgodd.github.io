{"version":3,"file":"static/js/32.87059ccb.chunk.js","mappings":"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","sources":["sections/auth/AuthSocial.js","components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","sections/auth/LoginForm.js","pages/auth/Login.js"],"sourcesContent":["import { Divider, IconButton, Stack } from \"@mui/material\";\r\nimport { GithubLogo, GoogleLogo, TwitterLogo } from \"@phosphor-icons/react\";\r\nimport React from \"react\";\r\n\r\nconst AuthSocial = () => {\r\n  return (\r\n    <div>\r\n      <Divider\r\n        sx={{\r\n          my: 2.5,\r\n          typography: \"overline\",\r\n          color: \"text.disabled\",\r\n          \"&::before,::after\": {\r\n            borderTopStyle: \"dashed\",\r\n          },\r\n        }}\r\n      >\r\n        OR\r\n      </Divider>\r\n      <Stack direction={\"row\"} justifyContent={\"center\"} spacing={2} >\r\n        <IconButton >\r\n          <GoogleLogo color=\"#df3e30\" />\r\n        </IconButton>\r\n        <IconButton color=\"inherit\">\r\n          <GithubLogo  />\r\n        </IconButton>\r\n        <IconButton >\r\n          <TwitterLogo color=\"#1c9cea\" />\r\n        </IconButton>\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthSocial;\r\n","import React from \"react\";\r\nimport { FormProvider as Form } from \"react-hook-form\";\r\n\r\nconst FormProvider = ({ children, onSubmit, methods }) => {\r\n  return (\r\n    <Form {...methods}>\r\n      <form onSubmit={onSubmit}>{children}</form>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormProvider;\r\n","import PropTypes from \"prop-types\";\r\n// form\r\n\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\n//mui\r\nimport { TextField } from \"@mui/material\";\r\n\r\nRHFTextField.propTypes = {\r\n  name: PropTypes.string,\r\n  helperText: PropTypes.node,\r\n};\r\n\r\nexport default function RHFTextField({ name, helperText, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <TextField\r\n          {...field}\r\n          value={\r\n            typeof field.value === \"number\" && field.value === 0\r\n              ? \"\"\r\n              : field.value\r\n          }\r\n          fullWidth\r\n          error={!!error}\r\n          helperText={error ? error.message : helperText}\r\n          {...other}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport FormProvider from \"../../components/hook-form/FormProvider\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  Link,\r\n  Stack,\r\n} from \"@mui/material\";\r\nimport { RHFTextField } from \"../../components/hook-form\";\r\nimport { Eye, EyeSlash } from \"@phosphor-icons/react\";\r\n\r\nconst LoginForm = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email must be a valid email address\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  const defaultValues = {\r\n    email: \"demo@sutalk.com\",\r\n    password: \"demo1234\",\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(LoginForm),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isSubmitSuccessful },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      //submit data to backend\r\n    } catch (error) {\r\n      console.log(error);\r\n      reset();\r\n      setError(\"afterSubmit\", {\r\n        ...error,\r\n        messge: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        {!!errors.afterSubmit && (\r\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\r\n        )}\r\n\r\n        <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n        <RHFTextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setShowPassword(!showPassword);\r\n                  }}\r\n                >\r\n                  {showPassword ? <Eye /> : <EyeSlash />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n      <Stack alignItems={\"flex-end\"} sx={{ my: 2 }}>\r\n        <Link  href=\"https://www.instagram.com/newjeans_official/\" variant=\"body2\" color=\"inherit\" underline=\"always\">\r\n          Forgot Password?\r\n        </Link>\r\n      </Stack>\r\n      <Button\r\n        fullWidth\r\n        color=\"inherit\"\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        sx={{\r\n          color: (theme) =>\r\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n          bgcolor: \"text.primary\",\r\n          \"&:hover\": {\r\n            bgcolor: \"text.primary\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n          },\r\n        }}\r\n      >\r\n        Login\r\n      </Button>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { Link, Stack, Typography } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport AuthSocial from \"../../sections/auth/AuthSocial\";\r\nimport LoginForm from \"../../sections/auth/LoginForm\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <>\r\n      <Stack spacing={2} sx={{ mt:5,mb: 5, position: \"relative\" }}>\r\n        <Typography variant=\"h4\">Login to SU-Talk</Typography>\r\n        <Stack direction={\"row\"} spacing={0.5}>\r\n          <Typography variant=\"body2\">New User? </Typography>\r\n          <Link to=\"/auth/register\" component={RouterLink} variant=\"subtitle2\">\r\n            Create new account\r\n          </Link>\r\n        </Stack>\r\n        {/* login form */}\r\n        <LoginForm/>\r\n        {/* auth social */}\r\n        <AuthSocial/>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Divider","sx","my","typography","color","borderTopStyle","Stack","direction","justifyContent","spacing","IconButton","children","onSubmit","methods","RHFTextField","name","helperText","other","control","useFormContext","render","field","error","fieldState","TextField","value","fullWidth","message","LoginForm","useState","showPassword","setShowPassword","Yup","shape","email","required","password","useForm","resolver","yupResolver","defaultValues","handleSubmit","reset","setError","formState","errors","isSubmitting","isSubmitSuccessful","data","afterSubmit","Alert","severity","label","type","InputProps","endAdornment","InputAdornment","onClick","alignItems","Link","href","variant","underline","Button","size","theme","palette","mode","bgcolor","mt","mb","position","Typography","to","component","RouterLink"],"sourceRoot":""}